{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin-Pc\\\\Desktop\\\\CS4800 GitHub\\\\Randevu\\\\react\\\\randevu\\\\src\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavBar } from '../NavBar/NavBar';\nimport { SubNav } from '../NavBar/SubNav/SubNav';\nimport { SearchResults } from './SearchResults/SearchResults';\nimport { SearchResultsSummary } from './SearchResultsSummary/SearchResultsSummary';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useBusinessSearch } from '../hooks/yelp-api/useBusinessSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Search() {\n  _s();\n\n  const {\n    term,\n    location\n  } = useParams();\n  let history = useHistory();\n  const [businesses, amountResults, searchParams, performSearch] = useBusinessSearch(term, location); //console.log(businesses);\n\n  if (!term || !location) {\n    history.push('/');\n  }\n\n  function search(term, location) {\n    const encodedTerm = encodeURI(term);\n    const encodedLocation = encodeURI(location);\n    history.push(`/search/${encodedTerm}/${encodedLocation}`);\n    performSearch({\n      term,\n      location\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      term: term,\n      location: location,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchResultsSummary, {\n      term: searchParams.term,\n      location: searchParams.location,\n      amountResults: amountResults,\n      shownResults: businesses ? businesses.length : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      businesses: businesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"jsb7NoIqY5QWVrVrajWs/Ik+d4g=\", false, function () {\n  return [useParams, useHistory, useBusinessSearch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Admin-Pc/Desktop/CS4800 GitHub/Randevu/react/randevu/src/Search/Search.js"],"names":["React","NavBar","SubNav","SearchResults","SearchResultsSummary","useParams","useHistory","useBusinessSearch","Search","term","location","history","businesses","amountResults","searchParams","performSearch","push","search","encodedTerm","encodeURI","encodedLocation","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,oBAAT,QAAqC,6CAArC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,iBAAT,QAAkC,qCAAlC;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AAErB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBL,SAAS,EAAlC;AACA,MAAIM,OAAO,GAAGL,UAAU,EAAxB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,EAA4BC,YAA5B,EAA0CC,aAA1C,IAA2DR,iBAAiB,CAACE,IAAD,EAAOC,QAAP,CAAlF,CAJqB,CAKrB;;AAEA,MAAI,CAACD,IAAD,IAAS,CAACC,QAAd,EAAwB;AACpBC,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACH;;AAED,WAASC,MAAT,CAAgBR,IAAhB,EAAsBC,QAAtB,EAAgC;AAC5B,UAAMQ,WAAW,GAAGC,SAAS,CAACV,IAAD,CAA7B;AACA,UAAMW,eAAe,GAAGD,SAAS,CAACT,QAAD,CAAjC;AACAC,IAAAA,OAAO,CAACK,IAAR,CAAc,WAAUE,WAAY,IAAGE,eAAgB,EAAvD;AACAL,IAAAA,aAAa,CAAC;AAACN,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,CAAb;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,QAAQ,EAAEC,QAA9B;AAAwC,MAAA,MAAM,EAAEO;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEH,YAAY,CAACL,IAAzC;AACsB,MAAA,QAAQ,EAAEK,YAAY,CAACJ,QAD7C;AAEsB,MAAA,aAAa,EAAEG,aAFrC;AAGsB,MAAA,YAAY,EAAED,UAAU,GAAGA,UAAU,CAACS,MAAd,GAAuB;AAHrE;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,aAAD;AAAe,MAAA,UAAU,EAAET;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA9BeJ,M;UAEaH,S,EACXC,U,EACmDC,iB;;;KAJrDC,M","sourcesContent":["import React from 'react';\nimport { NavBar } from '../NavBar/NavBar';\nimport { SubNav } from '../NavBar/SubNav/SubNav';\nimport { SearchResults } from './SearchResults/SearchResults';\nimport { SearchResultsSummary } from './SearchResultsSummary/SearchResultsSummary';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useBusinessSearch } from '../hooks/yelp-api/useBusinessSearch';\n\nexport function Search() {\n\n    const {term, location} = useParams();\n    let history = useHistory();\n    const [businesses, amountResults, searchParams, performSearch] = useBusinessSearch(term, location);\n    //console.log(businesses);\n    \n    if (!term || !location) {\n        history.push('/');\n    }\n\n    function search(term, location) {\n        const encodedTerm = encodeURI(term);\n        const encodedLocation = encodeURI(location);\n        history.push(`/search/${encodedTerm}/${encodedLocation}`);\n        performSearch({term, location});\n    }\n    \n    return (\n        <div>\n            <NavBar term={term} location={location} search={search}/>\n            <SubNav/>\n            <SearchResultsSummary term={searchParams.term} \n                                  location={searchParams.location} \n                                  amountResults={amountResults} \n                                  shownResults={businesses ? businesses.length : 0} \n            />\n            <SearchResults businesses={businesses}/>\n        </div>\n    );\n} "]},"metadata":{},"sourceType":"module"}