{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as api from './api';\nexport function useBusinessSearch(term, location) {\n  _s();\n\n  const [businesses, setBusinesses] = useState([]);\n  const [amountResults, setAmountResults] = useState();\n  const [searchParams, setSearchParams] = useState({\n    term,\n    location\n  });\n  console.log(searchParams);\n  /*\n  useEffect(() => {\n      setBusinesses([]);\n      const fetchData = async () => {\n          try {\n              const rawData = await api.get('/businesses/search', searchParams);\n              const resp = await rawData.json();\n              setBusinesses(resp.businesses);\n              setAmountResults(resp.total);\n          } catch(e) {\n              console.error(e);\n          }\n      };\n      fetchData();\n  }, [searchParams]);\n  return [businesses, amountResults, searchParams, setSearchParams]; */\n}\n\n_s(useBusinessSearch, \"pe9sr27D3BaES0JgHFd/70go1pA=\");","map":{"version":3,"sources":["C:/Users/Admin-Pc/Desktop/CS4800 GitHub/Randevu/react/randevu/src/hooks/yelp-api/useBusinessSearch.js"],"names":["useState","useEffect","api","useBusinessSearch","term","location","businesses","setBusinesses","amountResults","setAmountResults","searchParams","setSearchParams","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2C;AAAA;;AAC9C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAACI,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,CAAhD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;GArBeP,iB","sourcesContent":["import {useState, useEffect} from 'react';\nimport * as api from './api';\n\nexport function useBusinessSearch(term, location) {\n    const [businesses, setBusinesses] = useState([]);\n    const [amountResults, setAmountResults] = useState();\n    const [searchParams, setSearchParams] = useState({term, location});\n    console.log(searchParams);\n    /*\n    useEffect(() => {\n        setBusinesses([]);\n        const fetchData = async () => {\n            try {\n                const rawData = await api.get('/businesses/search', searchParams);\n                const resp = await rawData.json();\n                setBusinesses(resp.businesses);\n                setAmountResults(resp.total);\n            } catch(e) {\n                console.error(e);\n            }\n        };\n        fetchData();\n    }, [searchParams]);\n    return [businesses, amountResults, searchParams, setSearchParams]; */\n}"]},"metadata":{},"sourceType":"module"}